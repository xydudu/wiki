= HTML5 =
HTML5 是目前正在讨论的新一代 HTML 标准，它代表了现在 Web 领域的最新的发展方向。在 HTML5 标准中，加入了新的多样的内容描述标签，直接支持表单验证，视频和音频标签，网页元素的拖拽，离线存储，工作线程等等。

== HTML5 API FOR JAVASCRIPT ==
=== APIS ===
* Canvas
* Drag & Drop
* Messaging
* History
* Inline Editing
* Offline Apps
* Video & Audio
* Geolocation
* Local Storage
* Selectors
* Server Events
* Web Sockets
* Workers

=== Canvas ===
* HTML5中引入的新元素之一
* canvas即为画布
* 可通过JS调用其API绘制2D图像，实现华丽的网页界面

==== 基本调用 ====

{{{name="code" class="xml"
    <canvas id="x" width="300" height="150" />
}}}

canvas调用时如<img>标签一样，唯一不同就是没有 src 和 alt 属性。上面代码构建了一个宽300px,高150px的画布。
* canvas可通过CSS改变其属性
* canvas支持DOM的标准属性

_IE不支持_

==== Javascript 操作画布 ====
* 获取canvas对象及画布渲染区域

{{{name="code" class="js"
    var 
    canvas = document.getElementById('x'),
    ctx = canvas.getContext('2d');
}}}

    * getContext() 方法只有一个参数，现在只支持2d
    * 可通过 canvas.getContext 判断浏览器是否支持
    
* 一个简单的例子

{{{name="code" class="js"
    
      <html>  
       <head>  
        <script type="application/javascript">  
          function draw() {  
            var canvas = document.getElementById("canvas");  
            if (canvas.getContext) {  
              var ctx = canvas.getContext("2d");  
        
              ctx.fillStyle = "rgb(200,0,0)";  
              ctx.fillRect (10, 10, 55, 50);  
        
              ctx.fillStyle = "rgba(0, 0, 200, 0.5)";  
              ctx.fillRect (30, 30, 55, 50);  
            }  
          }  
        </script>  
       </head>  
       <body onload="draw();">  
         <canvas id="canvas" width="150" height="150"></canvas>  
       </body>  
      </html>  

}}}
查看 [http://www.xydudu.com/demos/html5/canvas-1.html demo]

参考 [https://developer.mozilla.org/en/Canvas_tutorial Canvas tutorial]

* 做一个好玩的例子

    [http://xydudu.com/demos/html5/canvas-2.html canvas操作视频演示]


=== Drag & Drop 拖放 ===
* draggable = 'true
* events: dragstart, drop ...
* event.transferData

== video ==
HTML5定义了一个使用<video>元素来嵌入视频到网页的标准。[http://dev.w3.org/html5/spec/Overview.html#video 查看w3c上的说明]

* 现在主流的编码格式，h264, theora, webM。

=== 优势及前景 ===
* 页面嵌入视频不再需要第三方插件
* 调用方便
* 移动平台支持
* 几大主流浏览器的支持

=== 浏览器对 video 标签支持情况 ===
,
| IE9 | IE8 | IE7 | FX3.5 | FX3.0 | SAF4 | SAF3 | CHROME | OPERA |
|-----+-----+-----+-------+-------+------+------+--------+-------|
| Y   | N   | N   | Y     | N     | Y    | Y    | Y      | Y     |

=== 现在常用浏览器对各解码格式的支持 ===

| codecs            | IE8 | FX3.5 | OP10.5 | CHROME5 | SAFARI | IPHONE | ANDROID |
|-------------------+-----+-------+--------+---------+--------+--------+---------|
| Theora+Vorbis+Ogg | N   | Y     | Y      | Y       | N      | N      | N       |
| H.264+ACC+MP4     | N   | N     | N      | Y       | Y      | Y      | Y       |
| WebM              | N   | N     | N      | N       | N      | N      | N       |

=== 未来几种浏览器对各解码格式的支持 ===

| codecs            | IE9 | FX4 | OP11 | CHROME6 | SAFARI | IPHONE | ANDROID |
|-------------------+-----+-----+------+---------+--------+--------+---------|
| Theora+Vorbis+Ogg | N   | Y   | Y    | Y       | N      | N      | N       |
| H.264+ACC+MP4     | Y   | N   | N    | Y       | Y      | Y      | Y       |
| WebM              | N   | Y   | Y    | Y       | N      | N      | N       |

    从上面表格可以看出，没有一种视频解码格式可以通吃支持HTML5的所有浏览器，而且这种状况并不会在近期内能解决。
    为了让我们的视频可以被各浏览器支持，我们需要多种编码格式的影片。

=== 调用方法 ===
==== 基本====
{{{name="code" class="html"

    <video 
        
        poster="img/oceans-clip.png" 
        src="http://video-js.s3.amazonaws.com/oceans-clip.ogg"
        controls 
        autoplay 
        loop

    ></video>

}}}

    * 说明：
        # 支持标签的标准属性
        # poster: 封面，在视频未播放之前显示的画面。
        # src: 视频源地址。

    * 支持内建指令：
        # controls 是否可控制
        # autoplay 是否自动播放
        # loop 是否重复
        # preload 是否提前加载

    * 支持script外部控制：
        # play() 播放
        # pause() 停止
        # playbackRate() 控制播放速度

    * source 标签
        # 利用source标签引入不同格式的视频，适应不同浏览器 
==== demos ====


== 兼容各浏览器的例子 ==
* [http://henriksjokvist.net/archive/2009/10/serving-the-same-h264-video-file-to-everyone-from-internet-explorer-to-iphone 利用flash]

== 参考资料 ==
* [http://firefogg.org/ 一个转视频格式到ogg的firefox扩展]
* [http://html5test.com/ 测试浏览器对HTML5支持程度]
* [http://www.ruanyifeng.com/blog/2010/05/html5_codec_fight.html HTML5的视频格式之争]
* [http://www.tgideas.com/?p=1033 HTML 5 Video概述]
* [http://www.w3.org/2010/05/video/mediaevents.html w3c的video测试页]
* [http://henriksjokvist.net/archive/2009/2/using-the-html5-video-tag-with-a-flash-fallback Using the HTML5 <video> tag with a Flash fallback]
* http://dev.w3.org/html5/spec/Overview.html
* http://diveintohtml5.org
* http://www.html5video.org/
* http://html5readiness.com/
* [http://www.happyworm.com/jquery/jplayer/latest/demos.htm jplayer(一个jqeury扩展)]
* [http://www.techbang.com.tw/posts/2025-o-column-bets-html5-video-tag 備受矚目的 HTML5 Video標籤]

